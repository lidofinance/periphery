# Mantle Goerli Deployment & Configuration

parameters:
  - &wstETH "0x7f39C581F595B53c5cb19bD0b3f8dA6c935E2Ca0"
  - &agent "0x3e40D73EB977Dc6a537aF587D48316feE66E9C8c"
  - &l1EmergencyBreaksMultisig "0x73b047fe6337183A454c5217241D780a932777bD"
  - &l2EmergencyBreaksMultisig "0xa8579D42E34398267dE16e6eeeCdb7ED0EFF953C"
  - &mantleL1CrossDomainMessenger "0x676A795fe6E43C17c668de16730c3F690FEB7120" # https://github.com/mantlenetworkio/networks/blob/main/mainnet/info/mainnet-info.yaml
  - &mantleL2CrossDomainMessenger "0x4200000000000000000000000000000000000007" # https://github.com/mantlenetworkio/networks/blob/main/mainnet/info/mainnet-info.yaml

deployed:
  - &l1TokenBridge "0xf273d09fA2EEEb372BAEAc2056498a180d24c05E"
  - &l1TokenBridgeImpl "0x30a3fCdFf44DaCBf25ae4f563aCF79B01Aa19a07"
  - &l2GovernanceExecutor "0x3a7B055BF88CdC59D20D0245809C6E6B3c5819dd"
  - &l2TokenBridge "0xD95729a53870C3f3ab5110f47cA2Ed87BE96F0a0"
  - &l2TokenBridgeImpl "0x470A6328c5E613a31f4238110cC123d188B851F2"
  - &l2WstETH "0xf273d09fA2EEEb372BAEAc2056498a180d24c05E"
  - &l2WstETHImpl "0x30a3fCdFf44DaCBf25ae4f563aCF79B01Aa19a07"

roles:
  - &DEFAULT_ADMIN_ROLE "0x0000000000000000000000000000000000000000000000000000000000000000"
  - &DEPOSITS_DISABLER_ROLE "0x63f736f21cb2943826cd50b191eb054ebbea670e4e962d0527611f830cd399d6"
  - &DEPOSITS_ENABLER_ROLE "0x4b43b36766bde12c5e9cbbc37d15f8d1f769f08f54720ab370faeb4ce893753a"
  - &WITHDRAWALS_DISABLER_ROLE "0x94a954c0bc99227eddbc0715a62a7e1056ed8784cd719c2303b685683908857c"
  - &WITHDRAWALS_ENABLER_ROLE "0x9ab8816a3dc0b3849ec1ac00483f6ec815b07eee2fd766a353311c823ad59d0d"

l1:
  rpcUrl: L1_RPC_URL # https://ethereum.publicnode.com # url or env var
  contracts:
    tokenBridge:
      name: L1ERC20TokenBridge
      address: *l1TokenBridge
      proxyName: OssifiableProxy
      implementation: *l1TokenBridgeImpl
      proxyChecks:
        proxy__getImplementation: *l1TokenBridgeImpl
        proxy__getAdmin: *agent
        proxy__getIsOssified: false
      checks:
        isInitialized: true
        isDepositsEnabled: true
        isWithdrawalsEnabled: true
        l1Token: *wstETH
        l2Token: *l2WstETH
        l2TokenBridge: *l2TokenBridge
        messenger: *mantleL1CrossDomainMessenger
        DEFAULT_ADMIN_ROLE: *DEFAULT_ADMIN_ROLE
        DEPOSITS_DISABLER_ROLE: *DEPOSITS_DISABLER_ROLE
        DEPOSITS_ENABLER_ROLE: *DEPOSITS_ENABLER_ROLE
        WITHDRAWALS_DISABLER_ROLE: *WITHDRAWALS_DISABLER_ROLE
        WITHDRAWALS_ENABLER_ROLE: *WITHDRAWALS_ENABLER_ROLE
      implementationChecks:
        isInitialized: true
        isDepositsEnabled: false
        isWithdrawalsEnabled: false
        hasRole:
          args: [*DEFAULT_ADMIN_ROLE, "0x0000000000000000000000000000000000000000"]
          result: true
      ozAcl:
        *DEFAULT_ADMIN_ROLE : [*agent]
        *DEPOSITS_DISABLER_ROLE : [*agent, *l1EmergencyBreaksMultisig]
        *WITHDRAWALS_DISABLER_ROLE : [*agent, *l1EmergencyBreaksMultisig]
        *WITHDRAWALS_ENABLER_ROLE : [*agent]

l2:
  rpcUrl: https://rpc.mantle.xyz # url or env var
  contracts:
    governanceExecutor:
      name: OptimismBridgeExecutor
      address: *l2GovernanceExecutor
      checks:
        getEthereumGovernanceExecutor: *agent
        getGracePeriod: 86400
        getGuardian: "0x0000000000000000000000000000000000000000"
        getDelay: 0
        getMinimumDelay: 0
        getMaximumDelay: 1
        getActionsSetCount: 0
    wstETH:
      name: ERC20Bridged
      address: *l2WstETH
      proxyName: OssifiableProxy
      implementation: *l2WstETHImpl
      proxyChecks:
        proxy__getImplementation: *l2WstETHImpl
        proxy__getAdmin: *l2GovernanceExecutor
        proxy__getIsOssified: false
      checks:
        name: Wrapped liquid staked Ether 2.0
        symbol: wstETH
        decimals: 18
        bridge: *l2TokenBridge
        # totalSupply: 5000000000000000
        version: "1"
      implementationChecks: {}
    tokenBridge:
      name: L2ERC20TokenBridge
      address: *l2TokenBridge
      proxyName: OssifiableProxy
      implementation: *l2TokenBridgeImpl
      proxyChecks:
        proxy__getImplementation: *l2TokenBridgeImpl
        proxy__getAdmin: *l2GovernanceExecutor
        proxy__getIsOssified: false
      checks:
        isDepositsEnabled: true
        isWithdrawalsEnabled: true
        isInitialized: true
        l1Token: *wstETH
        l2Token: *l2WstETH
        l1TokenBridge: *l1TokenBridge
        messenger: *mantleL2CrossDomainMessenger
        DEFAULT_ADMIN_ROLE: *DEFAULT_ADMIN_ROLE
        DEPOSITS_DISABLER_ROLE: *DEPOSITS_DISABLER_ROLE
        DEPOSITS_ENABLER_ROLE: *DEPOSITS_ENABLER_ROLE
        WITHDRAWALS_DISABLER_ROLE: *WITHDRAWALS_DISABLER_ROLE
        WITHDRAWALS_ENABLER_ROLE: *WITHDRAWALS_ENABLER_ROLE
      implementationChecks:
        isInitialized: true
        isDepositsEnabled: false
        isWithdrawalsEnabled: false
        hasRole:
          args: [*DEFAULT_ADMIN_ROLE, "0x0000000000000000000000000000000000000000"]
          result: true
      ozAcl:
        *DEFAULT_ADMIN_ROLE : [*l2GovernanceExecutor]
        *DEPOSITS_DISABLER_ROLE : [*l2GovernanceExecutor, *l2EmergencyBreaksMultisig]
        *DEPOSITS_ENABLER_ROLE : [*l2GovernanceExecutor]
        *WITHDRAWALS_DISABLER_ROLE : [*l2GovernanceExecutor, *l2EmergencyBreaksMultisig]
        *WITHDRAWALS_ENABLER_ROLE : [*l2GovernanceExecutor]
